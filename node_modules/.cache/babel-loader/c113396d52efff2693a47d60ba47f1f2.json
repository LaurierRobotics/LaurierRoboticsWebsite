{"ast":null,"code":"var _jsxFileName = \"/Users/saifal-dinali/Desktop/Projects/React Projects/roboticssite-master/src/components/Navbars/DemoNavbar.js\";\n//import Robotics from \"assets/img/Robotics.png\";\nimport React from \"react\";\nimport { Container, Navbar, NavbarBrand } from \"reactstrap\";\nimport routes from \"routes.js\";\nimport \"./DemoNavbar.css\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n\n      return null;\n    });\n    return brandName;\n  }\n\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  } // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n\n\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // add or remove classes depending if we are on full-screen-maps page or not\n      React.createElement(Navbar, {\n        color: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : this.state.color,\n        expand: \"lg\",\n        className: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-toggle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        ref: this.sidebarToggle,\n        className: \"navbar-toggler\",\n        onClick: () => this.openSidebar(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(NavbarBrand, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, this.getBrand()))))\n    );\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/saifal-dinali/Desktop/Projects/React Projects/roboticssite-master/src/components/Navbars/DemoNavbar.js"],"names":["React","Container","Navbar","NavbarBrand","routes","Header","Component","constructor","props","state","isOpen","dropdownOpen","color","toggle","bind","dropdownToggle","sidebarToggle","createRef","setState","e","getBrand","brandName","map","prop","key","window","location","href","indexOf","layout","path","name","openSidebar","document","documentElement","classList","current","updateColor","innerWidth","componentDidMount","addEventListener","componentDidUpdate","history","pathname","className","render"],"mappings":"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","sourcesContent":["//import Robotics from \"assets/img/Robotics.png\";\nimport React from \"react\";\nimport {\n  Container, Navbar,\n  NavbarBrand\n} from \"reactstrap\";\nimport routes from \"routes.js\";\nimport { } from \"./DemoNavbar.css\";\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"dark\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n            (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={this.sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          {/*<div className=\"justify-content-end\">\n            <img id='logoMedia' src={Robotics} />\n      </div>*/}\n        </Container>\n      </Navbar >\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}